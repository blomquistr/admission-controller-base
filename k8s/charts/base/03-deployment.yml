---
apiVersion: v1
kind: ConfigMap
metadata:
  name: k8s-cloud-system-webhook-server
  namespace: k8s-cloud-system
  labels:
    app.kubernetes.io/name: k8s-cloud-system
    app.kubernetes.io/version: "0.0.1"
    app.kubernetes.io/commponent: webhook-server-environment-config
    app.kubernetes.io/part-of: k8s-cloud-system
    app.kubernetes.io/managed-by: kubectl
data:
  WEBHOOK_CERT_FILE_PATH: "/etc/webhook/certs/cert"
  WEBHOOK_KEY_FILE_PATH: "/etc/webhook/certs/key"
  WEBHOOK_HTTP_PORT: "8080"
  WEBHOOK_HTTPS_PORT: "8443"
  WEBHOOK_MESSAGE: "Hello, there!"

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: k8s-cloud-system-webhook-server
  namespace: k8s-cloud-system
  labels:
    app.kubernetes.io/name: k8s-cloud-system
    app.kubernetes.io/version: "0.0.1"
    app.kubernetes.io/commponent: webhook-server
    app.kubernetes.io/part-of: k8s-cloud-system
    app.kubernetes.io/managed-by: kubectl
spec:
  replicas: 3
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
      maxSurge: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: k8s-cloud-system
      app.kubernetes.io/version: "0.0.1"
      app.kubernetes.io/commponent: webhook-server
      app.kubernetes.io/part-of: k8s-cloud-system
      app.kubernetes.io/managed-by: kubectl
  template:
    metadata:
      labels:
        app.kubernetes.io/name: k8s-cloud-system
        app.kubernetes.io/version: "0.0.1"
        app.kubernetes.io/commponent: webhook-server
        app.kubernetes.io/part-of: k8s-cloud-system
        app.kubernetes.io/managed-by: kubectl
    spec:
      serviceAccountName: k8s-cloud-system
      volumes:
        - name: tls-secret
          secret:
            secretName: k8s-cloud-system-webhook-ca-bundle
      containers:
        - name: webhook-server
          image: localhost:5001/admission-controller-base/webhook-server-debug:5a58247-dirty
          livenessProbe:
            httpGet:
              path: /ping
              port: 8080
            initialDelaySeconds: 5
            periodSeconds: 15
          readinessProbe:
            httpGet:
              path: /readyz
              port: 8080
            initialDelaySeconds: 5
            periodSeconds: 15
          resources:
            limits:
              memory: 512Mi
              cpu: "500m"
            requests:
              memory: 512Mi
              cpu: "500m"
          envFrom:
            - configMapRef:
                name: k8s-cloud-system-webhook-server
          env:
            - name: CLUSTER_WEBHOOK_CA_BUNDLE
              valueFrom:
                secretKeyRef:
                  name: k8s-cloud-system-webhook-ca-bundle
                  key: ca
                  optional: false
          volumeMounts:
            - name: tls-secret
              mountPath: /etc/webhook/certs
              readOnly: true
          ports:
            - containerPort: 8080
            - containerPort: 8443
            - containerPort: 443
            - containerPort: 80
          # command: ["bash", "-c", "while true; do clear; sleep 60000; done"]
          command:
            [
              "/bin/bash",
              "-c",
              "./bin/webhook-server.exe --cert-file $WEBHOOK_CERT_FILE_PATH --key-file $WEBHOOK_KEY_FILE_PATH --message $WEBHOOK_MESSAGE",
            ]
          imagePullPolicy: Always
---
apiVersion: v1
kind: Service
metadata:
  name: k8s-cloud-system
  namespace: k8s-cloud-system
  labels:
    app.kubernetes.io/name: k8s-cloud-system
    app.kubernetes.io/version: "0.0.1"
    app.kubernetes.io/commponent: webhook-server
    app.kubernetes.io/part-of: k8s-cloud-system
    app.kubernetes.io/managed-by: kubectl
spec:
  selector:
    app.kubernetes.io/name: k8s-cloud-system
    app.kubernetes.io/version: "0.0.1"
    app.kubernetes.io/commponent: webhook-server
    app.kubernetes.io/part-of: k8s-cloud-system
    app.kubernetes.io/managed-by: kubectl
  ports:
    - port: 8080
      name: k8s-cloud-system-http
    - port: 8443
      name: k8s-cloud-system-https
    - port: 443
      targetPort: 8443
      name: https
    - port: 80
      targetPort: 8080
      name: http
